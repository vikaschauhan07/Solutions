Qno. 1:-//Write a program to find the first and the last occurrence of the letter 'o' and character ',' in
//"Hello, World"

Ans.
package day13;
public class Qno1 {
    public static void main(String arg []) {
    	String str = "Hello World";
    	int first = 0;
    	int last = 0;
    	
    	
    	System.out.println("first index of char is "+firstOccu(str, 'o'));
    	System.out.println("last index of char is "+lastOccu(str, 'o'));
    	System.out.println("result from the pre built function "+ str.lastIndexOf('o'));
    }
    static int firstOccu(String str, char c) {
    	int firstIndex = 0;
    	for(int i = 0;i<str.length();i++) {
    		if(str.charAt(i) == c) {
    			firstIndex = i;
    			break;	
    		}
    		
    	}
    	return firstIndex;
    } 
    static int lastOccu(String str, char c) {
    	int firstIndex = 0;
    	StringBuilder str1 = new StringBuilder(str);
    	StringBuilder rev = str1.reverse();
    	for(int i = 0;i<str.length();i++) {
    		if(rev.charAt(i) == c) {
    			firstIndex = i;
    			break;	
    		}
    		
    	}
    	return (str.length()-1)-firstIndex;
    } 
    
}

Qno. 2:-//Write a program that takes your full name as input and displays the abbreviations of the first
//and middle names except the last name which is displayed as it is. For example, if your name is
//Robert Brett Roser, then the output should be R.B.Roser.
Ans.
package day13;
 
public class Qno1 {
    public static void main(String arg []) {
    	String str = "Robert Brett Roser";
    	System.out.println(abbrivation(str));
    	
    	
    	
    }
    static String abbrivation(String str) {
    	
    	
    	return str.charAt(0)+"." + str.charAt(firstOccu(str)+1)+"."+str.substring(lastOccu(str)+1);
    } 
    static int firstOccu(String str) {
    	int firstIndex = 0;
    	
    	for(int i = 0;i<str.length();i++) {
    		if(str.charAt(i) == ' ') {
    			firstIndex = i;
    			break;	
    		}
    		
    	}
    	return firstIndex;
    } 
    static int lastOccu(String str) {
    	int firstIndex = 0;
    	StringBuilder str1 = new StringBuilder(str);
    	StringBuilder rev = str1.reverse();
    	for(int i = 0;i<str.length();i++) {
    		if(rev.charAt(i) == ' ') {
    			firstIndex = i;
    			break;	
    		}
    		
    	}
    	return (str.length()-1)-firstIndex;
    } 
    
}

Qno. 3:-Input a string of alphabets. Find out the number of occurrence of all alphabets in that string.
//Find out the alphabet with maximum occurrence. 
Ans.
package day13;

import java.util.Scanner;
public class Qno1 {
    public static void main(String arg []) {
    	String str = new Scanner(System.in).nextLine();  
        int[] freq = new int[str.length()];  
        char minChar = str.charAt(0), maxChar = str.charAt(0);  
        char string[] = str.toCharArray();  
        for(int i = 0; i < string.length; i++) {  
            freq[i] = 1;  
            for(int j = i+1; j < string.length; j++) {  
                if(string[i] == string[j] && string[i] != ' ' && string[i] != '0') {  
                    freq[i]++;    
                    string[j] = '0';  
                }  
            }  
        }  
        int max = freq[0];  
        for(int i = 0; i <freq.length; i++) {  
            if(max < freq[i]) {  
                max = freq[i];  
                maxChar = string[i];  
            }  
        }  
          
        
        System.out.println("Maximum occurring character: " + maxChar);  
    	
    	
    }
   
    
    
}


Qno. 4:-Write a Java program to replace spaces with underscores. 
Ans.
package day13;

import java.util.Scanner;

//Write a Java program to replace spaces with underscores. 
public class Qno1 {
    public static void main(String arg []) {
    	System.out.println("enter the word with space ");
    	String str = new Scanner(System.in).nextLine();  
        System.out.println(str.replace(' ', '_'));
        System.out.println("with function " + replaceSpace(str));
        
    }
   static String replaceSpace(String str) {
	   String str1 = "";
	   for(int i =0;i<str.length();i++) {
		   if(str.charAt(i) == ' ') {
			   str1 = str1+'_';
		   } else {
			   str1 = str1 + str.charAt(i);
		   }
	   }
	   return str1;
   }
    
    
}

Qno. 5:-//Write a Java program to detect double and triple spaces in a string.

Ans.
package day13;

public class Qno1 {
//Write a Java program to detect double and triple spaces in a string.
	
	public static void main(String[] args) {
		String str = "The string with  double  and triple spaces";
	
		
		System.out.println("double space present "+str.contains("  "));
		
		System.out.println("tripple space present "+str.contains("   "));
		
		
		
	}


}

Qno. 6:-//Java Program to Merge two String Arrays
Ans.
package day13;

import java.util.Scanner;



public class Qno1 {
    public static void main(String arg []) {
    	System.out.println("enter the value of n for array 1");
    	String[] arr = makeArray(new Scanner(System.in).nextInt());
    	  
    	System.out.println("enter the value of n for array 2");
    	String [] arr2 = makeArray(new Scanner(System.in).nextInt());
    	
    	String [] arr3 = mergingArray(arr, arr2);
    	printArray(arr3);
        
    }
   static String[] makeArray(int n) {
	   String [] arr = new String[n];
	   System.out.println("enter the element ");
	   for(int i = 0;i<n;i++) {
		   arr[i] = new Scanner(System.in).nextLine(); 
	   }
	   return arr;
   }
   static void printArray(String [] arr) {
	   
	   for(int i = 0;i<arr.length;i++) {
		   System.out.println(arr[i]); 
	   }
	   
   }
   
   static String[] mergingArray(String [] arr1,String[] arr2) {
	  
	   int newLength = arr1.length + arr2.length;
	   String [] arr3 = new String[newLength];
	   for(int i = 0;i<newLength;i++) {
		   if(i<arr1.length) {
			   arr3[i] = arr1[i];
		   } else {
			   arr3[i] = arr2[(arr2.length - (newLength - i))];
		   }
	   }
	   return arr3;
   }
   
    
    
}

Qno 7:-Java Program to Reverse Each Word of a String
Ans.
package day13;

import java.util.Scanner;

public class Qno1 {
    public static void main(String args []) {
    	System.out.println("enter ");
    	String arr = new Scanner(System.in).nextLine();
    	System.out.println(reverseEachWord(arr));	
    }
    
    static String reverseEachWord(String Str) {
	   String[] words = Str.split(" ");
       String reverseStr = "";
       for (String word: words) {
           
           reverseStr = reverseStr + reverseWhole(word) + " ";
       }
       return reverseStr;
    }
  
    static String reverseWhole(String str) {
       String reverseWord = "";
       for (int i = (str.length() - 1); i >= 0; i--) {
           reverseWord = reverseWord + str.charAt(i);
       }
       return reverseWord;
   }
}
    
Qno. 8:-pallindrom or not
Ans.
package day13;

import java.util.*;
public class Qno1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Enter the String to Check Palindrom ");
		String  str = new Scanner(System.in).nextLine(); 
		if(palindChe(str)) {
			System.out.println(" is palindrom ");
		} else {
			System.out.println(" not palindrom ");
		}
	}
	
	
	
	static boolean palindChe(String str) {
		StringBuilder st = new StringBuilder(str);
		st.reverse();
		String reverseString = st.toString();
		if(reverseString.equals(str)) {
			return true;
		} else {
			return false;
		}
		
	}

}

Qno. 9:-//Java Program to Reverse Each Word of a String
Ans.
package day13;

import java.util.Scanner;

public class Qno1 {
    public static void main(String args []) {
    	System.out.println("enter ");
    	String arr = new Scanner(System.in).nextLine();
    	System.out.println(trimAllWhitespace(arr));	
    }
    
   static String trimAllWhitespace(String str) {
        
        StringBuilder sb = new StringBuilder(str.length());
        for (int i = 0; i < str.length(); i++) {
            char c = str.charAt(i);
            if (!Character.isWhitespace(c)) {
                sb.append(c);
            }
        }
        return sb.toString();
    }


}
    
Qno 10:-Java Program to Count Number of Words in Given String

Ans.
package day13;

import java.util.Scanner;
public class Qno1 {
    public static void main(String args []) {
    	System.out.println("enter ");
    	String arr = new Scanner(System.in).nextLine();
    	System.out.println("no of word in given");
    	System.out.println(countWord(arr));
    }
   
 	static int  countWord(String str) {
 		int count = 1;
 		for (int i = 0; i < str.length() - 1; i++) {
		   if ((str.charAt(i) == ' ') && (str.charAt(i + 1) != ' ')) {
			   count++;

		   }
	   }
	   return count;
 	}

}
    
    

    

